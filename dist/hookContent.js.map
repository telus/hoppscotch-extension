{"mappings":"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","sources":["src/hookContent.js"],"sourcesContent":[";(() => {\n  const defineSubscribableObject = (obj) =>\n    new Proxy(\n      {\n        ...obj,\n        _subscribers: {},\n        subscribe: function (prop, func) {\n          if (Array.isArray(this._subscribers[prop])) {\n            this._subscribers[prop].push(func)\n          } else {\n            this._subscribers[prop] = [func]\n          }\n        },\n      },\n      {\n        set(obj, prop, newVal) {\n          obj[prop] = newVal\n\n          if (Array.isArray(obj._subscribers[prop])) {\n            for (let subscriber of obj._subscribers[prop]) {\n              subscriber(newVal)\n            }\n          }\n\n          return true\n        },\n      }\n    )\n\n  if (window.__HOPP_EXTENSION_STATUS_PROXY__) {\n    window.__HOPP_EXTENSION_STATUS_PROXY__.status = \"available\"\n  } else {\n    window.__HOPP_EXTENSION_STATUS_PROXY__ = defineSubscribableObject({\n      status: \"available\",\n    })\n  }\n\n  window.__POSTWOMAN_EXTENSION_HOOK__ = {\n    getVersion: () => ({ major: 0, minor: 37 }),\n\n    decodeB64ToArrayBuffer: (input, ab) => {\n      const keyStr =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n\n      const bytes = parseInt((input.length / 4) * 3, 10)\n\n      let uarray\n      let chr1, chr2, chr3\n      let enc1, enc2, enc3, enc4\n      let i = 0\n      let j = 0\n\n      if (ab) uarray = new Uint8Array(ab)\n      else uarray = new Uint8Array(bytes)\n\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\")\n\n      for (i = 0; i < bytes; i += 3) {\n        //get the 3 octects in 4 ascii chars\n        enc1 = keyStr.indexOf(input.charAt(j++))\n        enc2 = keyStr.indexOf(input.charAt(j++))\n        enc3 = keyStr.indexOf(input.charAt(j++))\n        enc4 = keyStr.indexOf(input.charAt(j++))\n\n        chr1 = (enc1 << 2) | (enc2 >> 4)\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n        chr3 = ((enc3 & 3) << 6) | enc4\n\n        uarray[i] = chr1\n        if (enc3 != 64) uarray[i + 1] = chr2\n        if (enc4 != 64) uarray[i + 2] = chr3\n      }\n\n      return uarray\n    },\n\n    transformFormData: async (config) => {\n      const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.readAsDataURL(file)\n          reader.onload = () => resolve(reader.result)\n          reader.onerror = (error) => reject(error)\n        })\n\n      if (config.data instanceof File) {\n        // firefox successfully sends the file object as is, but chrome malforms it\n        // so we're using objectURLs to access the file from the extension in chrome\n        if (process.env.HOPP_EXTENSION_TARGET === \"CHROME\") {\n          config.binaryContent = {\n            name: config.data.name,\n            // we'll convert the file to a url to access it from the extension\n            objectURL: URL.createObjectURL(config.data),\n          }\n        }\n      }\n\n      // TODO: use objectURLs instead of base64\n      if (config.data instanceof FormData) {\n        config.formFiles = []\n        config.formData = []\n\n        const entries = Array.from(config.data.entries())\n\n        for (const [key, value] of entries) {\n          if (value instanceof File) {\n            const convertedValue = await toBase64(value)\n\n            config.formFiles.push({\n              key: key,\n              value: convertedValue,\n              filename: value.name,\n            })\n          } else {\n            config.formData.push({\n              key: key,\n              value: value,\n            })\n          }\n        }\n\n        config.data = null\n\n        return config\n      }\n    },\n\n    cancelRequest: (config) => {\n      window.postMessage(\n        {\n          type: \"__POSTWOMAN_EXTENSION_CANCEL__\",\n        },\n        \"*\"\n      )\n    },\n\n    sendRequest: (config) =>\n      new Promise((resolve, reject) => {\n        function handleMessage(ev) {\n          if (ev.source !== window || !ev.data) {\n            return\n          }\n\n          if (ev.data.type === \"__POSTWOMAN_EXTENSION_RESPONSE__\") {\n            // Apply transformation from base64 to arraybuffer\n            if (ev.data.isBinary) {\n              const bytes = (ev.data.response.data.length / 4) * 3\n              const ab = new ArrayBuffer(bytes)\n              window.__POSTWOMAN_EXTENSION_HOOK__.decodeB64ToArrayBuffer(\n                ev.data.response.data,\n                ab\n              )\n\n              ev.data.response.data = ab\n            }\n\n            resolve(ev.data.response)\n            window.removeEventListener(\"message\", handleMessage)\n          } else if (ev.data.type === \"__POSTWOMAN_EXTENSION_ERROR__\") {\n            const error = ev.data.error\n\n            // We're restoring the original Error object here\n            const e = new Error(error.message, error.fileName, error.lineNumber)\n            e.name = error.name\n            e.stack = error.stack\n            if (error.response) {\n              e.response = error.response\n\n              const bytes = (e.response.data.length / 4) * 3\n              const ab = new ArrayBuffer(bytes)\n\n              window.__POSTWOMAN_EXTENSION_HOOK__.decodeB64ToArrayBuffer(\n                e.response.data,\n                ab\n              )\n              e.response.data = ab\n            }\n            reject(e)\n            window.removeEventListener(\"message\", handleMessage)\n          }\n        }\n\n        window.addEventListener(\"message\", handleMessage)\n\n        window.__POSTWOMAN_EXTENSION_HOOK__\n          .transformFormData(config)\n          .then((transformedConfig) => {\n            window.postMessage(\n              {\n                type: \"__POSTWOMAN_EXTENSION_REQUEST__\",\n                config,\n              },\n              \"*\"\n            )\n          })\n      }),\n  }\n})()\n"],"names":[],"version":3,"file":"hookContent.js.map"}