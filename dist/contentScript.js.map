{"mappings":";;ACAA,4BAAiB;;;;ACAjB,4BAAiB;;;AFcjB,SAAS;IACP,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,aAAuB,KAAK,KAAK,CAAC,KAAK,CAAC,aAAa;YAEzD,QAAQ;QACV;IACF;AACF;AAEA,eAAe;IACb,IAAI,aAAa,MAAM;IAEvB,IAAI,MAAM,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI;IAEtC,MAAM,aAAa,WAAW,QAAQ,CAAC,IAAI,MAAM,IAC7C,iBACA;IAUF,OAAO,OAAO,CAAC,WAAW,CAAe;QACvC,MAAM;QACN,aAAa;IACf;AAEJ;AAEA,SAAS;IACP,6FAA6F;IAC7F,IAAI,OAAO,4BAA4B,EACrC;IAGF,OAAO,4BAA4B,GAAG;IAEtC;;GAEC,GACD,OAAO,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,SAAS;QAC7C,IAAI,QAAQ,UAAU,IAAI,QAAQ,UAAU,CAAC,QAAQ,EACnD;IAEJ;IAEA,OAAO,gBAAgB,CAAC,WAAW,OAAO;QACxC,MAAM,aAAa,MAAM;QACzB,IAAI,MAAM,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI;QAEtC,MAAM,aAAa,WAAW,QAAQ,CAAC,IAAI,MAAM,IAC7C,iBACA;QAEJ,IAAI,GAAG,MAAM,KAAK,UAAU,CAAC,GAAG,IAAI,IAAI,cAAc,gBACpD;QAGF,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,mCACnB,OAAO,OAAO,CAAC,WAAW,CACxB;YACE,aAAa;YACb,MAAM,GAAG,IAAI,CAAC,MAAM;QACtB,GACA,CAAC;YACC,IAAI,QAAQ,IAAI,CAAC,KAAK,EACpB,OAAO,WAAW,CAChB;gBACE,MAAM;gBACN,OAAO,QAAQ,IAAI,CAAC,KAAK;YAC3B,GACA;iBAGF,OAAO,WAAW,CAChB;gBACE,MAAM;gBACN,UAAU,QAAQ,IAAI,CAAC,QAAQ;gBAC/B,UAAU,QAAQ,IAAI,CAAC,QAAQ;YACjC,GACA;QAGN;aAEG,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,kCAC1B,OAAO,OAAO,CAAC,WAAW,CAAC;YACzB,aAAa;QACf;IAEJ;IAEA;IAEA,OAAO,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,KAAK,SAAS;QAClD,IAAI,IAAI,MAAM,KAAK,gCACjB,aAAa;aACR,IAAI,IAAI,MAAM,KAAK,8CACxB,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,eAAe,CAAC;QACtB;IAEJ;AACF;AAEA","sources":["src/contentScript.ts","node_modules/.pnpm/@parcel+runtime-js@2.10.0_@parcel+core@2.10.0/node_modules/@parcel/runtime-js/lib/bundles/runtime-812b98eb1a6abd92.js","node_modules/.pnpm/@parcel+runtime-js@2.10.0_@parcel+core@2.10.0/node_modules/@parcel/runtime-js/lib/bundles/runtime-019cc39a996b50f1.js"],"sourcesContent":["import hookContent from \"bundle-text:./hookContent.js\"\nimport hookContentInvalidOrigin from \"bundle-text:./hookContentInvalidOrigin.js\"\n\ndeclare global {\n  interface Window {\n    HOPP_CONTENT_SCRIPT_EXECUTED: boolean\n  }\n}\n\nexport type HOOK_MESSAGE = {\n  type: \"execute_hook\"\n  origin_type: \"VALID_ORIGIN\" | \"UNKNOWN_ORIGIN\"\n}\n\nfunction getOriginList(): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    chrome.storage.sync.get((items) => {\n      let originList: string[] = JSON.parse(items[\"originList\"])\n\n      resolve(originList)\n    })\n  })\n}\n\nasync function injectHoppExtensionHook() {\n  let originList = await getOriginList()\n\n  let url = new URL(window.location.href)\n\n  const originType = originList.includes(url.origin)\n    ? \"VALID_ORIGIN\"\n    : \"UNKNOWN_ORIGIN\"\n\n  if (process.env.HOPP_EXTENSION_TARGET === \"FIREFOX\") {\n    const script = document.createElement(\"script\")\n    script.textContent = originList.includes(url.origin)\n      ? hookContent\n      : hookContentInvalidOrigin\n    document.documentElement.appendChild(script)\n    script.parentNode.removeChild(script)\n  } else {\n    chrome.runtime.sendMessage(<HOOK_MESSAGE>{\n      type: \"execute_hook\",\n      origin_type: originType,\n    })\n  }\n}\n\nfunction main() {\n  // check if the content script is already injected to avoid  multiple injections side effects\n  if (window.HOPP_CONTENT_SCRIPT_EXECUTED) {\n    return\n  }\n\n  window.HOPP_CONTENT_SCRIPT_EXECUTED = true\n\n  /**\n   * when an origin is added or removed,reevaluate the hook\n   */\n  chrome.storage.onChanged.addListener((changes, _areaName) => {\n    if (changes.originList && changes.originList.newValue) {\n      injectHoppExtensionHook()\n    }\n  })\n\n  window.addEventListener(\"message\", async (ev) => {\n    const originList = await getOriginList()\n    let url = new URL(window.location.href)\n\n    const originType = originList.includes(url.origin)\n      ? \"VALID_ORIGIN\"\n      : \"UNKNOWN_ORIGIN\"\n\n    if (ev.source !== window || !ev.data || originType != \"VALID_ORIGIN\") {\n      return\n    }\n\n    if (ev.data.type === \"__POSTWOMAN_EXTENSION_REQUEST__\") {\n      chrome.runtime.sendMessage(\n        {\n          messageType: \"send-req\",\n          data: ev.data.config,\n        },\n        (message) => {\n          if (message.data.error) {\n            window.postMessage(\n              {\n                type: \"__POSTWOMAN_EXTENSION_ERROR__\",\n                error: message.data.error,\n              },\n              \"*\"\n            )\n          } else {\n            window.postMessage(\n              {\n                type: \"__POSTWOMAN_EXTENSION_RESPONSE__\",\n                response: message.data.response,\n                isBinary: message.data.isBinary,\n              },\n              \"*\"\n            )\n          }\n        }\n      )\n    } else if (ev.data.type === \"__POSTWOMAN_EXTENSION_CANCEL__\") {\n      chrome.runtime.sendMessage({\n        messageType: \"cancel-req\",\n      })\n    }\n  })\n\n  injectHoppExtensionHook()\n\n  chrome.runtime.onMessage.addListener((msg, _sender, sendResponse) => {\n    if (msg.action === \"__POSTWOMAN_EXTENSION_PING__\") {\n      sendResponse(true)\n    } else if (msg.action === \"__POSTWOMAN_EXTENSION_REVOKE_OBJECT_URLS__\") {\n      msg.objectURLsToRevoke.forEach((objectURL: string) => {\n        URL.revokeObjectURL(objectURL)\n      })\n    }\n  })\n}\n\nmain()\n","module.exports = \"249ecddf433ca002\";","module.exports = \"197a32787f7ddf15\";"],"names":[],"version":3,"file":"contentScript.js.map"}